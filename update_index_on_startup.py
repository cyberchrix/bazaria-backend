#!/usr/bin/env python3
"""
Script pour v√©rifier et mettre √† jour l'index FAISS au d√©marrage
"""

import os
import json
import logging
from datetime import datetime, timedelta
from update_index import update_index, rebuild_index

logger = logging.getLogger(__name__)

def check_and_update_index():
    """V√©rifie si l'index doit √™tre mis √† jour et le fait si n√©cessaire"""
    
    INDEX_DIR = "index_bazaria"
    INDEXED_IDS_FILE = "indexed_ids.json"
    
    logger.info(f"üîç V√©rification de l'index dans '{INDEX_DIR}'...")
    
    # Si l'index n'existe pas, le g√©n√©rer
    if not os.path.exists(INDEX_DIR):
        logger.warning("‚ùå Index FAISS non trouv√©, g√©n√©ration compl√®te...")
        try:
            rebuild_index()
            logger.info("‚úÖ Index FAISS g√©n√©r√© avec succ√®s")
            return True
        except Exception as e:
            logger.error(f"‚ùå Erreur lors de la g√©n√©ration: {e}")
            return False
    
    # Si l'index existe, v√©rifier s'il faut le mettre √† jour
    logger.info("‚úÖ Index FAISS trouv√©, v√©rification des mises √† jour...")
    
    try:
        # V√©rifier si le fichier de suivi existe
        if os.path.exists(INDEXED_IDS_FILE):
            logger.info("üìä V√©rification des nouvelles annonces...")
            update_result = update_index()
            
            if update_result.get("success"):
                logger.info(f"‚úÖ Index mis √† jour: {update_result.get('new_announcements', 0)} nouvelles annonces")
                return True
            else:
                logger.warning(f"‚ö†Ô∏è Mise √† jour partielle: {update_result.get('message', 'Erreur inconnue')}")
                return True
        else:
            logger.info("üîÑ Fichier de suivi non trouv√©, reconstruction compl√®te...")
            rebuild_index()
            logger.info("‚úÖ Index FAISS reconstruit avec succ√®s")
            return True
            
    except Exception as e:
        logger.error(f"‚ùå Erreur lors de la mise √† jour: {e}")
        logger.error("üîÑ Tentative de reconstruction compl√®te...")
        try:
            rebuild_index()
            logger.info("‚úÖ Index FAISS reconstruit avec succ√®s")
            return True
        except Exception as e2:
            logger.error(f"‚ùå Erreur lors de la reconstruction: {e2}")
            return False

if __name__ == "__main__":
    check_and_update_index() 